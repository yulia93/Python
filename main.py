# Задача №39. 
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод: Вывод:
# 7 3 3 2 12
# 3 1 3 4 2 4 12

# 6
# 4 15 43 1 15 1 (каждое число вводится с новой строки)

# def fill_list(list_list, num):
#     for i in range(num):
#          list_list.append(int(input(f"введите элемент массива {i}: ")))
#     return list_list

# num1=int(input("введите кол-во элементов 1го массива: "))
# num2=int(input("введите кол-во элементов 2го массива: "))
# list_1=[ ]
# list_2=[ ]

# list_1=fill_list(list_1, num1)
# list_2=fill_list(list_2, num2)

# new_list=[ ]

# for item in list_1:
#     if item not in list_2:
#         new_list.append(item)

# print(new_list)


# Задача №41. 
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# Ввод: Ввод:
# 5 5
# 1 2 3 4 5 1 5 1 5 1
# Вывод: Вывод:
# 0 2

# l1 = [int(input(f"введите элемент массива {i+1}: ")) for i in range(int(input("введите длину массива: ")))]


# def find_elem(lst):
#     i, n, count = 1, len(lst) - 1, 0
#     while i < n:
#         if lst[i-1] < lst[i] > lst[i+1]:
#               count +=1
#         i += 1
#     return count

# print(find_elem(l1))


# Задача №45. 
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз(перестановка чисел новую
#                          пару не дает).
# Ввод: Вывод:
# 300 220 284

# import datetime

# a = datetime.datetime.now()

# def sum_divide (number):
#     sum_divide,  i=0, 1 

#     while i < number:
#         if number%i == 0:
#             sum_divide += i
#         i += 1
#     return sum_divide

# k, i, = 300, 1
# while i < k:
#     j = sum_divide(i)
#     if i < j < k and i == sum_divide(j) :
#         print(f'{i} {j}')
#     i += 1 

# print(datetime.datetime.now() - a)

